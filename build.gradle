plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.0'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'io.qameta.allure' version '2.11.2'
// id 'jacoco' // Add the JaCoCo plugin for code coverage
}

group = 'com.mdscem'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(8)
	}
}

repositories {
	mavenCentral()
}

ext {
	restAssuredVersion = '4.3.3'
	junitJupiterVersion = '5.8.2'
	allureVersion = '2.17.3'
}
dependencyManagement {
	imports {
		mavenBom "io.qameta.allure:allure-bom:${allureVersion}"
	}
}


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'com.fasterxml.jackson.core:jackson-core:2.15.0'
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.0'
	implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.7.4'
	implementation 'com.networknt:json-schema-validator:1.0.82'
	implementation 'junit:junit:4.13.1'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
// testImplementation "io.rest-assured:rest-assured:${restAssuredVersion}"
	testImplementation 'org.testng:testng:7.4.0'
	testImplementation "org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}"
	testImplementation "org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}"


	testImplementation 'io.qameta.allure:allure-testng:2.17.3'
	implementation 'io.qameta.allure:allure-java-commons:2.17.3'
	implementation 'io.qameta.allure:allure-testng:2.17.3'
	implementation "io.rest-assured:rest-assured:${restAssuredVersion}"
	implementation 'org.skyscreamer:jsonassert:1.5.1'

	testImplementation 'io.qameta.allure:allure-rest-assured:2.15.0'
	testImplementation 'io.qameta.allure:allure-junit4:2.15.0'
	testImplementation 'io.qameta.allure:allure-testng:2.21.0'

	implementation 'com.aventstack:extentreports:5.0.9'
	implementation 'org.jfree:jfreechart:1.5.3' // Check for the latest version

}

tasks.named('test') {
	useTestNG()
	useJUnitPlatform()
	systemProperty 'surefire.testng.configs', 'testng.xml'

}
allure {
	version = '2.17.3'
	autoconfigure = true
	aspectjweaver = true
}
test {
	// Use TestNG for testing
	useTestNG() {
		// This is to ensure that TestNG runs and generates reports
//    options {
//       listeners << 'org.testng.reporters.XMLReporter'
		useDefaultListeners = true
		suites 'src/test/resources/testng.xml'  // Point to your TestNG XML file
//    }
	}

	// Enable logging of passed, skipped, and failed events
	testLogging {
		events "passed", "skipped", "failed"
	}

	// Set test outputs to be retained for viewing
	reports {
		junitXml.enabled = true // Enable XML report generation
		html.enabled = true     // Enable HTML report generation
		html.destination = file("$buildDir/custom-test-reports")  // Custom location for HTML reports
	}
	// Enable Allure integration for TestNG tests
	systemProperty "allure.results.directory", "$buildDir/allure-results"
	useJUnitPlatform()  // Enable JUnit 5
// finalizedBy jacocoTestReport, jacocoTestCoverageVerification // Run coverage verification
}
//// Configure JaCoCo for test coverage
//jacoco {
// toolVersion = "0.8.8"  // Latest JaCoCo version
//}
//// Configure the JaCoCo report task
//jacocoTestReport {
// reports {
//    xml.required = true  // Enable XML report generation
//    csv.required = false // Disable CSV report generation
//    html.outputLocation = layout.buildDirectory.dir('jacocoHtml')  // Set output location for HTML reports
// }
//}

//jacocoTestCoverageVerification {
// violationRules {
//    rule {
//       // Apply to all classes
//       element = 'CLASS'
//       limit {
//          counter = 'INSTRUCTION'
//          value = 'COVEREDRATIO'
//       }
//       limit {
//          counter = 'BRANCH'
//          value = 'COVEREDRATIO'
//       }
//       limit {
//          counter = 'LINE'
//          value = 'COVEREDRATIO'
//       }
//    }
// }
//}
task printJavaVersion {
	doLast {
		println "Java Version: " + System.getProperty("java.version")
	}
}